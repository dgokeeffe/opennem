[tool.poetry]
name = "opennem-backend"
version = "4.0.0a132"
description = "OpenNEM Australian Energy Data Backend"
authors = ["Dylan McConnell <dylan.mcconnell@unimelb.edu.au>", "Nik Cubrilovic <nik@infotorch.org>"]
packages = [
    { include = "opennem" }
]

[project]
license = "MIT"
readme = "README.md"
homepage = "https://opennem.org.au"
repository = "https://github.com/opennem/opennem"
keywords = ["opennem", "analysis", "australia", "energy"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.10",
  "Topic :: Scientific/Engineering"
]
include = [
  'README.md'
]
dynamic = ["version"]

[tool.poetry.dependencies]
python = "^3.12"
requests = "^2.23.0"
sentry-sdk = "^2.1.1"
pydantic = {extras = ["email"], version = "^2.6.4"}
alembic = "^1.6.2"
click = "^8.0.3"
huey = "^2.2.0"
redis = "^4.3.4"
geojson = "^3.1.0"
fastapi = "^0.110.0"
shapely = "^2.0.2"
validators = "^0.18.1"
python-magic = "^0.4.18"
cachetools = "^5.0.0"
xlrd = "^2.0.1"
datetime-truncate = "^1.1.1"
datedelta = "^1.3"
pandas = "^2.2.0"
osm2geojson = "^0.2.0"
Mako = "^1.1.4"
SQLAlchemy = {extras = ["asyncio"], version = "^2.0.32"}
rich = "^13.7.0"
GeoAlchemy2 = "^0.14.4"
boto3 = "^1.23.7"
seaborn = "^0.13.2"
fastapi-cache2 = {extras = ["redis"], version = "^0.2.1"}
httpx = {extras = ["http2", "socks"], version = "^0.27.0"}
uvicorn = "^0.30.4"
gunicorn = "^22.0.0"
unkey-py = "^0.7.1"
authlib = "^1.2.1"
pydantic-geojson = "^0.1.1"
pydantic-settings = "^2.1.0"
python-multipart = "^0.0.6"
fastapi-versionizer = "^4.0.1"
datetype = "^2024.2.8"
clickhouse-connect = "^0.7.8"
asyncpg = "^0.29.0"
celery = "^5.4.0"
deprecation = "^2.1.0"
asgiref = "^3.8.1"
chardet = "^5.2.0"
tqdm = "^4.66.5"
logfire = {extras = ["celery", "fastapi", "httpx", "requests", "sqlalchemy"], version = "^0.50.1"}
aioboto3 = "^13.1.1"
pytest-asyncio = "^0.23.8"


[tool.poetry.group.dev.dependencies]
python-dotenv = "^1.0.0"
rope = "^1.0.0"
pytest = "^8.0.0"
pytest-watch = "^4.2.0"
mdutils = "^1.2.2"
sqlalchemy-stubs = "^0.4"
pytest-benchmark = "^4.0.0"
GitPython = "^3.1.12"
pdbpp = "^0.10.2"
pytest-sugar = "^1.0.0"
tox = "^4.2.6"
types-requests = "^2.25.2"
betamax = "^0.9.0"
types-python-dateutil = "^2.8.0"
coverage = "^7.1.0"
pytest-cov = "^4.0.0"
types-cachetools = "^5.0.0"
types-PyYAML = "^6.0.4"
freezegun = "^1.2.2"
pyright = "^1.1.299"
ruff = "^0.5.5"
hatch = "^1.7.0"
types-redis = "^4.6.0.11"
requests-cache = "^1.1.1"
hypothesis = "^6.108.5"

[tool.poetry.scripts]
opennem = 'opennem.cli:main'

[tool.ruff]
target-version = "py312"
line-length = 130
exclude = [
  "var",
  "opennem/db/migrations",
  "build",
  "notebooks",
  ".ipython",
  ".jupyter",
]

[tool.ruff.lint]
select = [
  "F",   # flake8
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort
  "C",   # flake8-comprehensions
  "B",   # flake8-bugbear
  "UP",  # pyupgrade
  "T",   # mypy
#  "FAST", # fastapi
#  "PERF", # perflint
#  "FURB", # refurb
]
ignore = [
    "B008",  # do not perform function calls in argument defaults
    "T201",  # ignore print
    "T203",  # ignore pprint
    "C901",  # ignore function too complex
    "E721",  # igmpre unsafe type comparison
]

[tool.ruff.format]
quote-style = "double"
docstring-code-format = true
docstring-code-line-length = 100

[tool.pyright]
include = ["opennem/**/*.py"]
exclude = ["opennem/db/migrations/env.py"]
python_version = "3.11"
reportMissingImports = "error"
reportMissingTypeStubs = false

[tool.pytest.ini_options]
log_cli = true
log_level = "DEBUG"
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
